#include <stdio.h>

void main()
{
    int a[10], i, n, ele, flag;

    printf("enter the size ;\n");
    scanf("%d", &n);

    printf("enter the elements to the array:\n");
    for (i = 0; i < n; i++)
    {
        scanf("%d", &a[i]);
    }

    printf("enter the element to search: \n");
    scanf("%d", &ele);

    for (i = 0; i < n; i++)
    {
        if (a[i] == ele)
        {
            printf("Element found at the position %d\n",i);
            flag = 1;
        }
        if (a[i] == 0)
        {
            printf("Element not found \n");
        }
    }
}#include <stdio.h>
void main()
{
    int a[20], i, size, ele, flag = 0, right, left = 0, mid, result;
    printf("Enter the size\n");
    scanf("%d", &size);

    printf("Enter the elements\n");
    for (i = 0; i < size; i++)
    {
        scanf("%d", &a[i]);
    }
    
    printf("Enter the search element\n");
    scanf("%d", &ele);
    
    right = size - 1;
    while (left <= right)
    {
        mid = (left + right) / 2;
        if (a[mid] == ele)
        {
            result = mid;
            flag = 1;
            break;
        }
        else if (a[mid] < ele)
        {
            left = mid + 1;
        }
        else
        {
            right = mid - 1;
        }
    }
    if (flag == 0)
    {
        printf("Element not found\n");
    }
    else
    {
        printf("Element found at position %d\n", result);
    }
}
#include<stdio.h>
void main()
{
int a[20],i,j,k,size,small,temp;
printf("Enter the size\n");
scanf("%d",&size);
printf("Enter the elements\n");
for(i=0;i<size;i++)
{
scanf("%d",&a[i]);
}
for(i=0;i<size-1;i++)
{
small=i;
for(j=i+1;j<size;j++)
{
if(a[j]<a[small])
{
small=j;
}
}
if(small!=i)
{
temp=a[i];
a[i]=a[small];
a[small]=temp;
}
}
printf("After sorting\n");
for(i=0;i<size;i++)
{
printf("%d\n",a[i]);
}
#include <stdio.h>
#include <stdlib.h>
#define size 4
int stack[size], i, top = -1;

void push();
void pop();
void display();

void push()
{
    int ele;
    if (top == size - 1)
        printf("overflow\n");
    else
    {
        printf("Enter the element to insert\n");
        scanf("%d", &ele);
        top = top + 1;
        stack[top] = ele;
    }
}

void pop()
{
    if (top == -1)
    {
        printf("stack underflow\n");
    }
    else
    {
        printf("popped elements is %d", stack[top]);
        top = top - 1;
    }
}

void display()
{
    if (top == size - 1)
        printf("overflow\n");
    else
    {
        printf("Elements present in the array are \n");
        for (i = top; i >= 0; i--)
            printf("%d\n",stack[i]);
    }
}

void main()
{
    int choice;
    do
    {
        printf("1.Push() 2.pop() \n3.display() 4.Exit\n");
        printf("Enter your choice\n");
        scanf("%d", &choice);
        switch (choice)
        {
        case 1:
            push();
            break;
        case 2:
            pop();
            break;
        case 3:
            display();
            break;
        case 4:
            exit(0);
            break;
        default:
            printf("Invalid choice\n");
            break;
        }
    } while (choice != 4);
}

#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#define size 30
int top=-1;
char stack[size];


void push(char c)
{
if(top == size-1)
{
printf("Stack Overflow \n");
}
else
{
stack[++top]=c;
}
}

char pop()
{
if(top == -1)
{
printf("Stack underflow \n");
}
else
{
return stack[top--];
}
}

int precedence(char op)
{
switch(op)
{
case'+':
case'-': return 1;

case'*':
case'/': return 2;

case'^': return 3;

default : return 0;
}
}

void infix_to_postfix(char infix[], char postfix[])
{
int i=0,j=0;
char symbol, temp;

while((symbol = infix[i])!='\0')
{
i++;
switch(symbol)
{
case '(': push(symbol);
          break;
case ')': while(stack[top]!='(')
{
temp=pop();
postfix[j++]=temp;
}
break;
case '+':
case '-':
case '*':
case '/':
case '^':

while(precedence(stack[top])>=precedence(symbol))
{
postfix[j++]=pop();
}
push(symbol);
break;
default:postfix[j++]=symbol;
}
}

while(top!=-1)
{
postfix[j++]=pop();
}
}

void main()
{
char infix[size], postfix[size];
printf("Enter Infix expresion : \n");
scanf("%s",infix);
infix_to_postfix(infix,postfix);
printf("The postfix expression is \n %s\n",postfix);
}#include <stdio.h>
int main()
{
int i, n, sum=0;

printf("Enter the positive numbers:\n");
scanf("%d",&n);
for(i=0;i<=n;i++){
    sum +=i;
}
printf("Sum of all natural numbers is %d\n",sum);
}#include<stdio.h>
#include<stdlib.h>
#define n 3
int Q[n],R=-1,F=-1;

void enqueue()
{
int ele;
printf("Enter the element \n");
scanf("%d",&ele);
if(R==n-1)
{
printf("Queue Overflow \n");
}
else
{
R=R+1;
Q[R]=ele;
if(F==-1)
{
F=F+1;
}
}
}

void dequeue()
{
int delete;
if(F==-1)
{
printf("Queue Underflow \n");
}
else
{
delete=Q[F];
F=F+1;
printf("Removed element is %d \n",delete);
if(F>R)
{
R=-1;
F=-1;
}
}
}

void display()
{
int i;
if(F==-1)
{
printf("Queue is empty \n");
}
else
{
printf("Queue elements are \n");
for(i=F;i<=R;i++)
{
printf("%d\n",Q[i]);
}
}
}

void main()
{
int choice;
do
{
printf("Enter your choice\n");
printf("1.Enqueue  2.Dequeue  3.Display  4.Exit \n");
scanf("%d",&choice);
switch(choice)
{
case 1:enqueue();
        break;
case 2:dequeue();
        break;
case 3:display();
        break;
case 4:exit (0);
default:printf("Invalid choice\n");
        break;
}
}
while(choice!=4);
}

#include <stdio.h>
void main()
{
    int n;
    printf("enter the number");
    scanf("%d", &n);
    if (n % 2 == 0)
    {
        printf("%d is even", n);
    }
    else
    {
        printf("%d is odd", n);
    }
}#include <stdio.h>
int main()
{
    int n , first=0, second=1, next,i;
    printf("Enter the number \n");
    scanf("%d",&n);
    printf("fibonacci series :\n");
    for (i=0;i<n;i++)
    {
        printf("%d",first);
        next=first+second;
        first=second;
        second=next;
    }
}#include <stdio.h>

int main() {
    char operator;
    double num1, num2, result;

    printf("Enter an operator (+, -, *, /): ");
    scanf("%c", &operator);

    printf("Enter two operands: ");
    scanf("%lf %lf", &num1, &num2);

    switch(operator) {
        case '+':
            result = num1 + num2;
            break;
        case '-':
            result = num1 - num2;
            break;
        case '*':
            result = num1 * num2;
            break;
        case '/':
            if (num2 != 0)
                result = num1 / num2;
            else {
                printf("Error! Division by zero.\n");
                return 1;
            }
            break;
        default:
            printf("Error! Invalid operator.\n");
            return 1;
    }

    printf("Result: %.2lf %c %.2lf = %.2lf\n", num1, operator, num2, result);

    return 0;
}#include <stdio.h>

void main()
{
    int a[10], i, size, pos, ele;
    printf("Enter the size of array\n");
    scanf("%d", &size);

    printf("enter the elements into the array\n");
    for (i = 0; i < size; i++)
    {
        scanf("%d", &a[i]);
    }

    printf("enter the position \n");
    scanf("%d", &pos);

    printf("enter the element to inserted \n");
    scanf("%d", &ele);

    if (pos <= 0 || pos > (size + 1))
    {
        printf("Invalid position \n");
    }
    else
    {
        for (i = (size - 1); i >= (pos - 1); i++)
        {
            a[i + 1] = a[i];
        }
        a[pos - 1] = ele;
        size++;
    }
    printf("Updated array elements\n");
    for (i = 0; i < size; i++)
    {
        printf("%d\n", a[i]);
    }
}#include <stdio.h>

void main()
{
    int a[10], i, size, pos, ele;
    printf("Enter the size of array\n");
    scanf("%d", &size);

    printf("enter the elements into the array\n");
    for (i = 0; i < size; i++)
    {
        scanf("%d", &a[i]);
    }

    printf("enter the position \n");
    scanf("%d", &pos);

    printf("enter the element to inserted \n");
    scanf("%d", &ele);

    if (pos <= 0 || pos > (size + 1))
    {
        printf("Invalid position \n");
    }
    else
    {
        a[size] = a[pos - 1];
        a[pos - 1] = ele;
        size++;
    }
    printf("Updated array elements\n");
    for (i = 0; i < size; i++)
    {
        printf("%d\n", a[i]);
    }
}#include <stdio.h>

void main()
{
    int a[10], i, size, pos1, temp, pos2;
    printf("Enter the size of array\n");
    scanf("%d", &size);

    printf("enter the positions \n");
    scanf("%d%d", &pos1, &pos2);

    printf("enter the elements into the array\n");
    for (i = 0; i < size; i++)
    {
        scanf("%d", &a[i]);
    }

    if ((pos1 <= 0 || pos1 > (size + 1)) && (pos2 <= 0 || pos2 > (size + 1)))
    {
        printf("invalid choice\n");
    }
    else
    {
        temp = a[pos1 - 1];
        a[pos1 - 1] = a[pos2 - 1];
        a[pos2 - 1] = temp;
    }
    printf("Updated array elements\n");
    for (i = 0; i < size; i++)
    {
        printf("%d\n", a[i]);
    }
}#include <stdio.h>

void main()
{
    int a[10], i, size, pos, ele;
    printf("Enter the size of array\n");
    scanf("%d", &size);

    printf("enter the elements into the array\n");
    for (i = 0; i < size; i++)
    {
        scanf("%d", &a[i]);
    }

    printf("enter the position \n");
    scanf("%d", &pos);

    if (pos <= 0 || pos > (size))
    {
        printf("invalid choice\n");
    }
    else
    {
        for (i = (pos - 1); i < (size - 1); i++)
        {
            a[i] = a[i + 1];
        }
        size--;
    }
    printf("Updated array elements\n");
    for (i = 0; i < size; i++)
    {
        printf("%d\n", a[i]);
    }
}
#include <stdio.h>
void main()
{
    int a[20], i, j, size, temp, flag = 0;

    printf("Enter the size\n");
    scanf("%d", &size);

    printf("Enter the elements\n");
    for (i = 0; i < size; i++)
    {
        scanf("%d", &a[i]);
    }
    
    for (i = 0; i < size - 1; i++)
    {
        for (j = 0; j < size - i - 1; j++)
        {
            if (a[j] > a[j + 1])
            {
                temp = a[j];
                a[j] = a[j + 1];
                a[j + 1] = temp;
                flag = 1;
            }
        }
    }
    printf("Updated array\n");
    for (i = 0; i < size; i++)
    {
        printf("%d\n", a[i]);
    }
}
